function render(){clock.getElapsedTime();floor.visible=!0,floor.visible=!1,mirrorCamera.position.copy(floor.position),mirrorCamera.rotation.set(0,0,0),center2.rotation.x>.2?center2.rotation.x-=.001:center2.rotation.x+=.001,center2.rotation.y>1?center2.direction=-1:center2.direction=1,center2.rotation.y+=.003*center2.direction,groundMirror.updateTextureMatrix(),groundMirror.render(),renderer.render(scene,camera),requestAnimationFrame(render)}var container,scene,renderer,camera,light,clock,loader,WIDTH,HEIGHT,VIEW_ANGLE,ASPECT,NEAR,FAR;container=document.querySelector(".viewport"),clock=new THREE.Clock,WIDTH=window.innerWidth,HEIGHT=window.innerHeight,VIEW_ANGLE=45,ASPECT=WIDTH/HEIGHT,NEAR=1,FAR=1e4,scene=new THREE.Scene,scene.rotation.x=0,scene.rotation.y=0,scene.rotation.z=0,renderer=new THREE.WebGLRenderer({antialias:!0}),renderer.setSize(WIDTH,HEIGHT),renderer.shadowMapEnabled=!0,renderer.shadowMapSoft=!0,renderer.shadowMapType=THREE.PCFShadowMap,renderer.shadowMapAutoUpdate=!0,renderer.setClearColor(16777215,1),container.appendChild(renderer.domElement),camera=new THREE.PerspectiveCamera(VIEW_ANGLE,ASPECT,NEAR,FAR),mirrorCamera=new THREE.CubeCamera(1,10,1024),camera.position.set(.583239170758964,12.772924857820813,-2.347812310674576),camera.rotation.x=-Math.PI/12,scene.add(camera),controls=new THREE.OrbitControls(camera,renderer.domElement),controls.target.set(0,0,0),controls.update(),controls.maxPolarAngle=Math.PI/2-.094,controls.enablePan=!1,controls.maxDistance=13,controls.minDistance=5.5,light=new THREE.DirectionalLight(16777215),light.intensity=.17,light.position.set(100,100,-150),light.castShadow=!0,light.shadowCameraLeft=-3,light.shadowCameraTop=-3,light.shadowCameraRight=2,light.shadowCameraBottom=2,light.shadowCameraNear=1,light.shadowCameraFar=400,light.shadowBias=-1e-4,light.shadowMapWidth=light.shadowMapHeight=1024,light.shadowDarkness=.001;var ambient=new THREE.AmbientLight(16777215),point=new THREE.PointLight(16777215,.3,1e3);point.shadowCameraLeft=-2,point.shadowCameraTop=-2,point.shadowCameraRight=2,point.shadowCameraBottom=2,point.shadowCameraNear=1,point.shadowCameraFar=1e3,point.shadowBias=-1e-4,point.shadowMapWidth=point.shadowMapHeight=256,point.shadowDarkness=.001,ambient.intensity=.9,scene.add(light),scene.add(ambient,point),point.position.x=1,point.position.y=3,point.position.z=5,loader=new THREE.JSONLoader,scene.add(mirrorCamera);var mesh,container,maxAnisotropy=renderer.getMaxAnisotropy(),floor_geometry=new THREE.BoxGeometry(10,.001,10),floor_material=new THREE.MeshBasicMaterial({envMap:mirrorCamera.renderTarget}),planeGeo=new THREE.PlaneBufferGeometry(100.1,100.1),groundMirror=new THREE.Mirror(renderer,camera,{clipBias:1,textureWidth:WIDTH,textureHeight:HEIGHT,color:15527148}),texture=groundMirror.material,mirrorMesh=new THREE.Mesh(planeGeo,texture);mirrorMesh.add(groundMirror),mirrorMesh.rotateX(-Math.PI/2);var maze_geometry=new THREE.BoxGeometry(1,.3,.01),maze_geometry2=new THREE.BoxGeometry(5,.3,.01),maze_material=new THREE.MeshLambertMaterial({color:0}),yellow_material=new THREE.MeshLambertMaterial({color:16776960}),maze=new THREE.Mesh(maze_geometry,maze_material),maze2=new THREE.Mesh(maze_geometry,maze_material),maze3=new THREE.Mesh(maze_geometry,maze_material),maze4=new THREE.Mesh(maze_geometry,maze_material),maze5=new THREE.Mesh(maze_geometry2,maze_material),maze6=new THREE.Mesh(maze_geometry2,maze_material),center=new THREE.Mesh,center2=new THREE.Mesh,mazeLineGeom=new THREE.Geometry,mazeLineGeom2=new THREE.Geometry,mazeLineGeom3=new THREE.Geometry,yellowGeom=new THREE.Geometry;mazeLineGeom.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(-1,0,0)),mazeLineGeom2.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0),new THREE.Vector3(1,1,0),new THREE.Vector3(1,0,0)),mazeLineGeom3.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,.1,0),new THREE.Vector3(8,.1,0),new THREE.Vector3(8,0,0)),yellowGeom.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,.15,0),new THREE.Vector3(7,.15,0),new THREE.Vector3(7,0,0)),mazeLineGeom.faces.push(new THREE.Face4(0,1,2,3)),mazeLineGeom2.faces.push(new THREE.Face3(0,1,2)),mazeLineGeom2.faces.push(new THREE.Face3(0,2,3)),mazeLineGeom3.faces.push(new THREE.Face3(0,1,2)),mazeLineGeom3.faces.push(new THREE.Face3(0,2,3)),yellowGeom.faces.push(new THREE.Face3(0,1,2)),yellowGeom.faces.push(new THREE.Face3(0,2,3)),mazeLineGeom.computeBoundingSphere(),mazeLineGeom2.computeBoundingSphere(),mazeLineGeom3.computeBoundingSphere(),yellowGeom.computeBoundingSphere();var mazeShape=new THREE.Mesh(mazeLineGeom,maze_material),mazeShape2=new THREE.Mesh(mazeLineGeom2,maze_material),mazeShape3=new THREE.Mesh(mazeLineGeom3,maze_material),yellowShape=new THREE.Mesh(yellowGeom,yellow_material);mazeShape.position.y=2,mazeShape2.position.y=3,mazeShape2.position.x=0,mazeShape3.position.x=-3,yellowShape.position.set(-3,1.5,-1),yellowShape.rotation.y=-Math.PI/4,center2.add(mazeShape,mazeShape2,mazeShape3,yellowShape,center);var cameraPath=new TWEEN.Tween(-.860141185553005,9.890120390723853,-1.6224113316879447).to({x:800*Math.random()-400,y:800*Math.random()-400,z:800*Math.random()-400},2e3).easing(TWEEN.Easing.Elastic.Out).start();maze2.position.x=-.5,maze2.position.z=-.5,maze2.rotation.y=Math.PI/2,maze3.position.x=.5,maze3.position.z=-.5,maze3.rotation.y=Math.PI/2,maze4.position.z=-1,maze5.position.z=-.5,maze5.rotation.y=Math.PI/4,maze5.position.z=-.5,maze5.rotation.y=Math.PI/4,maze6.position.z=.5,maze6.rotation.y=Math.PI/4,center.position.z=.5,center.add(maze,maze2,maze3,maze4,maze5,maze6),scene.add(center2),floor=new THREE.Mesh(floor_geometry,floor_material),mirrorCamera.position=floor.position,floor.receiveShadow=!0,center2.add(floor),center2.add(mirrorMesh),scene.fog=new THREE.FogExp2(10066431,25e-5),render(),center2.direction=1;